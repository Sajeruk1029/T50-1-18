БИЛЕТ 12
Диалоговые окна для работы с файлами и каталогами. 
Основные классы, свойства и методы. Приведите примеры.

FileOpenPicker и FileSavePicker имеют похожий набор свойств, 
которые позволяют кастомизировать диалоговые окна:

SuggestedStartLocation: указывает на каталог по умолчанию, 
который будет открываться в диалоговом окне. В качестве 
значения можно указать одну из констант перечисления PickerLocationId. 
Например, каталог Документы - PickerLocationId.DocumentsLibrary

SuggestedFileName: устанавливает имя файла по умолчанию

CommitButtonText: устанавливает текст кнопки, которая и 
выполняет действие сохранения или открытия

DefaultFileExtension: расширение файла, которое будет 
добавляться к имени файла при сохранении, если другого 
расширения не будет указано (только для FileSavePicker)

FileTypeChoices: объект IDictionary, который содержит 
расширения файлов и их описания (только для FileSavePicker)

FileTypeFilter: объект List, который содержит список 
доступных расширений файлов (только для FileOpenPicker)

ViewMode: формат отображения списка файлов в диалоговом 
окне при их открытии (только для FileOpenPicker). Принимает 
одну из двух констант: PickerViewMode.Thumbnail (отображение 
файлов в виде значков) и PickerViewMode.List (отображение файлов в виде списка)

При сохранении файла мы получаем указанное имя файла с расширением с помощью метода PickSaveFileAsync():
	var new_file = await savePicker.PickSaveFileAsync();
Этот метод возвращает объект StorageFile, получив который, мы можем сохранять в него различное содержимое.

При открытии файла мы получаем выбранный файл с помощью метода PickSingleFileAsync():
	var new_file = await savePicker.PickSaveFileAsync();
Этот метод также возвращает объект StorageFile, который представляет выбранный файл.