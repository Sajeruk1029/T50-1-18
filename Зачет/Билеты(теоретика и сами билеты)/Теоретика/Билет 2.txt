БИЛЕТ 2
Язык разметки XAML. Для чего необходим. Преимущества и недостатки. 
Элементы и их атрибуты.

XAML (eXtensible Application Markup Language) - язык разметки, 
используемый для инициализации объектов в технологиях на платформе .NET.

XAML - не является обязательной частью приложения, мы вобще можем обходиться 
без него, создавая все элементы в файле связанного с ним кода на языке C#. 

Преимущества:
1)Возможность отделить графический интерфейс от логики приложения, благодаря 
чему над разными частями приложения могут относительно автономно работать разные 
специалисты: над интерфейсом - дизайнеры, над кодом логики - программисты.

2) Компактность, понятность, код на XAML относительно легко поддерживать.

Недостатки:
1) В некоторые аспекты сложно вникнуть
Привязка данных позволяет значительно сократить код и избавить разработчика 
от решения многих задач. Но проблема в том, что использовать привязку бывает 
очень сложно. Чаще всего потому, что не всегда понятно, из-за чего вывод 
работает некорректно. А причин может быть много:
	неправильно указана привязка;
	не указан DataContext;
	передается пустой объект и так далее.
Также каждый раз приходится имплементировать интерфейс INotifyPropertyChanged 
и писать повторяющийся код для каждого класса, об изменении которого нужно уведомлять.

2) Чтобы всё отображалось, как ты хочешь, приходится писать много кода

Элементы и их атрибуты

XAML предлагает очень простую и ясную схему определения различных элементов и их свойств. 
Каждый элемент, как и любой элемент XML, должен иметь открытый и закрытый тег, как в случае с элементом Window:
	<Window></Window>
Либо элемент может иметь сокращенню форму с закрывающим слешем в конце, наподобие:
	<Window />
Но в отличие от элементов xml каждый элемент в XAML соответствует определенному классу C#. 
Например, элемент Button соответствует классу System.Windows.Controls.Button. А 
свойства этого класса соответствуют атрибутам элемента Button.
